package chapter19;

import java.util.Arrays;
import java.util.List;
import java.util.stream.Stream;

// === 스트림 API ===
// : 자바 8에서 처음 도입됨
// >> 컬렉션 데이터를 처리하는 도구

// +) 스트림의 주요 특징
// - 일회성: 한 번 소비되면 다시 사용 X, 새로운 스트림을 생성하여 사용해야 함.
// - 연산의 분류: 스트림 연산은 중간, 최종 연산으로 나뉨
// 	 >> 중간 연산: map, filter, sorted
//				   데이터를 가공하지만 실제로 연산은 최종 연산의 호출 시 수행
//	 >> 최종 연산: collect, forEach, reduce 등
//				   스트림의 결과를 반환하고 스트림을 종료

/*
  	 스트림 생성(사용) 절차
  	 1. 배열 생성 >> 스트림으로 변환
  	 2. List 생성 >> 스트림으로 변환
  	 3. generate 메서드 >> 스트림 생성
  	 4. 범위 지정 >> 스트림 생성
  	 5. 빌더 >> 스트림 생성
  	 
  	 == 중간(가공) 절차 ==
  	 1. map(function)
  	 2. filter(Predicate)
  	 3. sorted(Comparator)
  	 
  	 == 최종(결과) 절차 ==
  	 1. collect >> stream을 list로 변환
  	 2. forEach >> 반복자
 */

public class StreamMain {
	public static void main(String[] args) {
		// 1. 배열로부터 스트림 생성
		Stream<Integer> st1 = Arrays.stream(new Integer [] {1, 2, 3, 4, 5});
		
		// 2. 컬렉션(List)로 부터 스트림 생성
		List<Integer> numberList = Arrays.asList(1, 2, 3, 4, 5);
		
		
		
	}
}
